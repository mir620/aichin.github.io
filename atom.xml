<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aichin</title>
  
  <subtitle>Premature optimization is the root of all evil.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.aichin.net/"/>
  <updated>2018-01-12T06:19:56.311Z</updated>
  <id>http://blog.aichin.net/</id>
  
  <author>
    <name>Kang Qin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>制作镜像脚本</title>
    <link href="http://blog.aichin.net/m/%E5%88%B6%E4%BD%9C%E9%95%9C%E5%83%8F%E8%84%9A%E6%9C%AC/"/>
    <id>http://blog.aichin.net/m/制作镜像脚本/</id>
    <published>2018-01-12T06:09:15.881Z</published>
    <updated>2018-01-12T06:19:56.311Z</updated>
    
    <content type="html"><![CDATA[<hr><p>此脚本主要更具自身公司业务进行定制的一套代码。主要功能能根据已经编译好的tar.gz包，制作镜像，并且上传到指定的镜像仓库。</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">FTP_DATA=/data/ftp</span><br><span class="line"></span><br><span class="line"><span class="comment">#PROJECT_NAME=wisecloud</span></span><br><span class="line">MIRROR_ADDRESS=<span class="string">"registry.sviyun.com"</span></span><br><span class="line">GIT_ADDRESS=<span class="string">"git@git.svicloud.com:svicloud/wisecloud.git"</span></span><br><span class="line"></span><br><span class="line">anynowtime=<span class="string">"date +'%Y-%m-%d %H:%M:%S'"</span></span><br><span class="line">NOW=<span class="string">"echo [\`<span class="variable">$anynowtime</span>\`][PID:$$]"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> tms_start</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"`eval <span class="variable">$NOW</span>` tms_start"</span> &gt;&gt;<span class="string">"<span class="variable">$&#123;BUILD_LOG&#125;</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> tms_success</span><br><span class="line">&#123;</span><br><span class="line">    msg=<span class="string">"$*"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"`eval <span class="variable">$NOW</span>` tms_success:[<span class="variable">$msg</span>]"</span> &gt;&gt;<span class="string">"<span class="variable">$&#123;BUILD_LOG&#125;</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"`eval <span class="variable">$NOW</span>` tms_success:[<span class="variable">$msg</span>]"</span></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> tms_fail</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    msg=<span class="string">"$*"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"`eval <span class="variable">$NOW</span>` tms_fail:[<span class="variable">$msg</span>]"</span> &gt;&gt;<span class="string">"<span class="variable">$&#123;BUILD_LOG&#125;</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"`eval <span class="variable">$NOW</span>` tms_fail:[<span class="variable">$msg</span>]"</span></span><br><span class="line">    <span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> fn_print_err()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">local</span> info_error=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"===================================================================================================="</span> &gt;&gt;<span class="string">"<span class="variable">$&#123;BUILD_LOG&#125;</span>"</span></span><br><span class="line">    cat <span class="string">"<span class="variable">$&#123;ERROR_LOG&#125;</span>"</span> &gt;&gt;<span class="string">"<span class="variable">$&#123;BUILD_LOG&#125;</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"===================================================================================================="</span> &gt;&gt;<span class="string">"<span class="variable">$&#123;BUILD_LOG&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">    tms_fail <span class="string">"<span class="variable">$&#123;info_error&#125;</span>"</span> || <span class="built_in">return</span> $?</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> fn_build_images()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">local</span> images_name=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#build new images</span></span><br><span class="line">    docker build -t <span class="string">"<span class="variable">$&#123;MIRROR_ADDRESS&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;PROJECT_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;images_name&#125;</span>"</span>:<span class="string">"<span class="variable">$&#123;IMAGE_VERSION&#125;</span>"</span> . &gt;<span class="string">"<span class="variable">$&#123;ERROR_LOG&#125;</span>"</span> 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        fn_print_err <span class="string">"Build &lt;<span class="variable">$&#123;MIRROR_ADDRESS&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>/<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>/<span class="variable">$&#123;images_name&#125;</span>:<span class="variable">$&#123;IMAGE_VERSION&#125;</span>&gt; failure."</span> || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#tag images latest</span></span><br><span class="line">    docker tag <span class="string">"<span class="variable">$&#123;MIRROR_ADDRESS&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;PROJECT_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;images_name&#125;</span>"</span>:<span class="string">"<span class="variable">$&#123;IMAGE_VERSION&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;MIRROR_ADDRESS&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;PROJECT_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;images_name&#125;</span>"</span>:latest  &gt;<span class="string">"<span class="variable">$&#123;ERROR_LOG&#125;</span>"</span> 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        fn_print_err <span class="string">"Tag &lt;<span class="variable">$&#123;MIRROR_ADDRESS&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>/<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>/<span class="variable">$&#123;images_name&#125;</span>:latest&gt; failure."</span> || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#push images</span></span><br><span class="line">    docker push <span class="string">"<span class="variable">$&#123;MIRROR_ADDRESS&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;PROJECT_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;images_name&#125;</span>"</span>:<span class="string">"<span class="variable">$&#123;IMAGE_VERSION&#125;</span>"</span> &gt;<span class="string">"<span class="variable">$&#123;ERROR_LOG&#125;</span>"</span> 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        fn_print_err <span class="string">"Push&lt;<span class="variable">$&#123;MIRROR_ADDRESS&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>/<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>/<span class="variable">$&#123;images_name&#125;</span>:<span class="variable">$&#123;IMAGE_VERSION&#125;</span>&gt; failure."</span> || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#push images latest</span></span><br><span class="line">    docker push <span class="string">"<span class="variable">$&#123;MIRROR_ADDRESS&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;PROJECT_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>"</span>/<span class="string">"<span class="variable">$&#123;images_name&#125;</span>"</span>:<span class="string">"latest"</span> &gt;<span class="string">"<span class="variable">$&#123;ERROR_LOG&#125;</span>"</span> 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        fn_print_err <span class="string">"Push&lt;<span class="variable">$&#123;MIRROR_ADDRESS&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>/<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>/<span class="variable">$&#123;images_name&#125;</span>:latest&gt; failure."</span> || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> fn_version_json()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">local</span> new_version</span><br><span class="line"></span><br><span class="line">    [ -d /tmp/wisecloud ] &amp;&amp; rm -rf /tmp/wisecloud</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cd</span> /tmp</span><br><span class="line">    git <span class="built_in">clone</span> <span class="string">"<span class="variable">$&#123;GIT_ADDRESS&#125;</span>"</span> &gt;<span class="string">"<span class="variable">$&#123;ERROR_LOG&#125;</span>"</span> 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        fn_print_err <span class="string">"Git &lt;wisecloud.git&gt; failure."</span> || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cd</span> /tmp/wisecloud &amp;&amp; cp version.json version.backup</span><br><span class="line"></span><br><span class="line">    jq <span class="string">".<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>.<span class="variable">$&#123;MODULE_SERVICE_NAME&#125;</span>_version = \"<span class="variable">$&#123;MODULE_SERVICE_VERSION&#125;</span>\""</span> version.backup &gt;version.json</span><br><span class="line">    new_version=`jq <span class="string">".<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>.<span class="variable">$&#123;MODULE_SERVICE_NAME&#125;</span>_version"</span> version.json |xargs`</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;new_version&#125;</span>"</span> != <span class="string">"<span class="variable">$&#123;MODULE_SERVICE_VERSION&#125;</span>"</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        fn_print_err <span class="string">"Version upgrade <span class="variable">$&#123;MODULE_SERVICE_VERSION&#125;</span> failed"</span> || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    rm version.backup</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    git add version.json  || <span class="built_in">return</span> $?</span><br><span class="line">    git commit -m <span class="string">"<span class="variable">$&#123;MODULE_SERVICE_VERSION&#125;</span>"</span></span><br><span class="line">    git push || <span class="built_in">return</span> $?</span><br><span class="line"></span><br><span class="line">    tms_success <span class="string">"Version upgrade <span class="variable">$&#123;MODULE_SERVICE_VERSION&#125;</span> finish."</span></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fn_main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    MODUL_NAME=<span class="variable">$1</span></span><br><span class="line">    <span class="built_in">local</span> svn_number=<span class="variable">$2</span></span><br><span class="line">    PROJECT_NAME=<span class="variable">$3</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#定义日志打印的路径</span></span><br><span class="line">    BUILD_LOG=/tmp/<span class="variable">$&#123;MODUL_NAME&#125;</span>/build.log</span><br><span class="line">    ERROR_LOG=/tmp/<span class="variable">$&#123;MODUL_NAME&#125;</span>/error.log</span><br><span class="line">   </span><br><span class="line">    <span class="comment">#创建日志文件 </span></span><br><span class="line">    [ -d /tmp/<span class="variable">$&#123;MODUL_NAME&#125;</span> ] &amp;&amp; rm -rf /tmp/<span class="variable">$&#123;MODUL_NAME&#125;</span></span><br><span class="line">    mkdir -p /tmp/<span class="variable">$&#123;MODUL_NAME&#125;</span></span><br><span class="line">    <span class="built_in">cd</span> /tmp/<span class="variable">$&#123;MODUL_NAME&#125;</span> &amp;&amp; touch build.log error.log</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$&#123;MODUL_NAME&#125;</span>"</span> -o -z <span class="string">"<span class="variable">$&#123;svn_number&#125;</span>"</span> -o -z <span class="string">"<span class="variable">$&#123;PROJECT_NAME&#125;</span>"</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        fn_print_err <span class="string">"Jenkins SVN version or modul name or project name does not exist."</span> || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#通过网元模块名和svn版本号找到包名</span></span><br><span class="line">    pkg_name=`ls /data/ftp |grep -i <span class="variable">$&#123;MODUL_NAME&#125;</span> |grep <span class="variable">$&#123;svn_number&#125;</span> |tail -n 1`</span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$&#123;pkg_name&#125;</span>"</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        fn_print_err <span class="string">"SVN version or modul name is Error."</span> || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">local</span> pkg_dir=`<span class="built_in">echo</span> <span class="variable">$&#123;pkg_name&#125;</span> |awk -F<span class="string">'-'</span> <span class="string">'&#123;print $1&#125;'</span>`</span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取拆分变量</span></span><br><span class="line">    <span class="built_in">local</span> images_name wangyuan_version</span><br><span class="line">    WANGYUAN_NAME=`<span class="built_in">echo</span> <span class="variable">$&#123;pkg_name&#125;</span> |awk -F<span class="string">'_'</span> <span class="string">'&#123;print $1&#125;'</span> |tr [A-Z] [a-z]`</span><br><span class="line">    <span class="built_in">local</span> server_name=`<span class="built_in">echo</span> <span class="variable">$&#123;pkg_name&#125;</span> |awk -F<span class="string">'_'</span> <span class="string">'&#123;print $2&#125;'</span> |tr [A-Z] [a-z]`</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;server_name&#125;</span>"</span> |grep [0-9] &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        images_name=<span class="string">"<span class="variable">$&#123;WANGYUAN_NAME&#125;</span>"</span></span><br><span class="line">        wangyuan_version=`<span class="built_in">echo</span> <span class="variable">$&#123;pkg_name&#125;</span> |awk -F<span class="string">'_'</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        images_name=<span class="string">"<span class="variable">$&#123;server_name&#125;</span>"</span></span><br><span class="line">        wangyuan_version=`<span class="built_in">echo</span> <span class="variable">$&#123;pkg_name&#125;</span> |awk -F<span class="string">'_'</span> <span class="string">'&#123;print $3&#125;'</span>`</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#拼接镜像的版本号，由网元版本号和svn版本号组成</span></span><br><span class="line">    IMAGE_VERSION=<span class="string">"<span class="variable">$&#123;wangyuan_version&#125;</span>"</span>-<span class="string">"<span class="variable">$&#123;svn_number&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#提取Dockerfile文件</span></span><br><span class="line">    cp /data/ftp/<span class="variable">$&#123;pkg_name&#125;</span> /tmp/<span class="variable">$&#123;MODUL_NAME&#125;</span></span><br><span class="line">    <span class="built_in">cd</span> /tmp/<span class="variable">$&#123;MODUL_NAME&#125;</span> &amp;&amp; tar -zxvf <span class="variable">$&#123;pkg_name&#125;</span> --wildcards <span class="variable">$&#123;pkg_dir&#125;</span>/Dockerfile</span><br><span class="line">    cp -p <span class="variable">$&#123;pkg_dir&#125;</span>/Dockerfile ./ &amp;&amp; rm -rf  <span class="variable">$&#123;pkg_dir&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#build镜像</span></span><br><span class="line">    <span class="built_in">cd</span> /tmp/<span class="variable">$&#123;MODUL_NAME&#125;</span></span><br><span class="line">    tms_success <span class="string">"Start build <span class="variable">$&#123;MODUL_NAME&#125;</span> images."</span></span><br><span class="line">    </span><br><span class="line">    fn_build_images <span class="string">"<span class="variable">$&#123;images_name&#125;</span>"</span> &gt;<span class="string">"<span class="variable">$&#123;ERROR_LOG&#125;</span>"</span> 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        fn_print_err <span class="string">"build &lt;<span class="variable">$&#123;images_name&#125;</span>&gt; failure."</span> || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#清理临时目录</span></span><br><span class="line">    tms_success <span class="string">"Build <span class="variable">$&#123;MODUL_NAME&#125;</span> images Success."</span></span><br><span class="line">    <span class="built_in">cd</span> /tmp &amp;&amp; rm -rf <span class="string">"<span class="variable">$&#123;MODUL_NAME&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">####################################################################################</span></span><br><span class="line">fn_main  <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span> || <span class="built_in">exit</span> $?</span><br><span class="line"><span class="comment">####################################################################################</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;此脚本主要更具自身公司业务进行定制的一套代码。主要功能能根据已经编译好的tar.gz包，制作镜像，并且上传到指定的镜像仓库。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>NFS高可用</title>
    <link href="http://blog.aichin.net/m/NFS%20%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    <id>http://blog.aichin.net/m/NFS 高可用/</id>
    <published>2018-01-12T03:35:10.333Z</published>
    <updated>2018-01-12T05:41:56.743Z</updated>
    
    <content type="html"><![CDATA[<hr><p><a href="http://www.cnblogs.com/liaojiafa/p/6129499.html" target="_blank" rel="noopener">来源：温柔易淡</a></p><p>NFS作为业界常用的共享存储方案，被众多公司采用。我司也不列外，使用NFS作为共享存储，为前端WEB server提供服务，主要存储网页代码以及其他文件。</p><a id="more"></a><h2 id="1、高可用方案"><a href="#1、高可用方案" class="headerlink" title="1、高可用方案"></a>1、高可用方案</h2><p>说道NFS，不得不说它的同步技术，同步技术有两种，</p><ul><li>借助RSYNC+inotify来实现主从同步数据。</li><li>借助DRBD，实现文件同步。</li></ul><p>上诉两种方案都没有实现高可用，只是实现了两者数据同步。但是业务要求NFS服务器必须是高可用，所以我们在第二种同步方案的基础上，在结合heartbeat来实现高可用。</p><h2 id="2、动手搭建"><a href="#2、动手搭建" class="headerlink" title="2、动手搭建"></a>2、动手搭建</h2><p>我们看看我们的服务器信息：</p><table><thead><tr><th>IP</th><th>角色</th></tr></thead><tbody><tr><td>192.168.1.4</td><td>NFS-Client(App-Server)</td></tr><tr><td>192.168.1.7</td><td>NFS-Master</td></tr><tr><td>192.168.1.8</td><td>NFS-Backup</td></tr></tbody></table><ul><li>以上系统版本都是CentOs6.6</li><li>heartbeat的VIP为192.168.1.100</li><li>我们实验室环境采用都是单张网卡，所以heartbeat监听eth0</li></ul><h2 id="3、基础工作"><a href="#3、基础工作" class="headerlink" title="3、基础工作"></a>3、基础工作</h2><ul><li>确保所有服务器时间同步。</li><li>确保所有服务器的防火墙，Selinux关闭了。</li><li>且主机名配置到位，能够根据主机名知道服务器角色。</li><li>确保所有服务器hosts里面能够解析任意一台服务器的hostname。</li></ul><h2 id="4、搭建DRBD"><a href="#4、搭建DRBD" class="headerlink" title="4、搭建DRBD"></a>4、搭建DRBD</h2><p>drbd的原理不赘述了，可以参考我的另一篇博文：<a href="http://www.cnblogs.com/liaojiafa/p/6118425.html" target="_blank" rel="noopener">http://www.cnblogs.com/liaojiafa/p/6118425.html</a> 。这里我们采用C协议（backup端网络接收到后写入磁盘再返回OK状态给Master）。<br>开始动手配置它吧。</p><h3 id="4-1、安装DRBD"><a href="#4-1、安装DRBD" class="headerlink" title="4.1、安装DRBD"></a>4.1、安装DRBD</h3><p>在nfs主备服务器都敲下面的命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsmaster ~]<span class="comment"># yum -y update kernel kernel-devel</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># rpm -Uvh http://www.elrepo.org/elrepo-release-6-6.el6.elrepo.noarch.rpm</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># yum -y install drbd84-utils kmod-drbd84</span></span><br></pre></td></tr></table></figure></p><h3 id="4-2、格式化磁盘"><a href="#4-2、格式化磁盘" class="headerlink" title="4.2、格式化磁盘"></a>4.2、格式化磁盘</h3><p>主备都安装drbd以后，我们就开始格式化磁盘。这里我把/dev/sdb直接分成主分区，大小为20G，在这基础之上，做了LVM卷，划分大小为10G。主备同时操作：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsmaster ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># pvcreate /dev/sdb1</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># vgcreate nfsdisk /dev/sdb1</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># lvcreate -L 10G -n nfsvolume nfsdisk</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># lvdisplay     # 刚才创建LVM卷的信息</span></span><br><span class="line">--- Logical volume ---</span><br><span class="line">LV Path                /dev/nfsdisk/nfsvolume</span><br><span class="line">LV Name                nfsvolume    </span><br><span class="line">VG Name                nfsdisk</span><br><span class="line">LV UUID                ub6vWZ-kX6r-zNdz-mzRy-7z1w-QsKb-ke8QBO</span><br><span class="line">LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">LV Creation host, time nfsmaster, 2016-12-03 16:06:41 +0800</span><br><span class="line">LV Status              available</span><br><span class="line"><span class="comment"># open                 0</span></span><br><span class="line">LV Size                10.00 GiB</span><br><span class="line">Current LE             2560</span><br><span class="line">Segments               1</span><br><span class="line">Allocation             inherit</span><br><span class="line">Read ahead sectors     auto</span><br><span class="line">- currently <span class="built_in">set</span> to     256</span><br><span class="line">Block device           253:0</span><br></pre></td></tr></table></figure></p><p>配置完成后，把master的drbd相关配置文件直接copy到backup上面就行了，我使用的是SCP。</p><h3 id="4-3、启动drbd"><a href="#4-3、启动drbd" class="headerlink" title="4.3、启动drbd"></a>4.3、启动drbd</h3><p>磁盘创建成功后，开始启动drbd了：·<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsbackup ~]<span class="comment"># drbdadm create-md r0</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># service  drbd start</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># drbdadm primary r0  # 到这里报错了，一看DRBD状态，两者不同步的状态，所以无法切换到primary。</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># service  drbd status</span></span><br><span class="line">drbd driver loaded OK; device status:</span><br><span class="line">version: 8.4.7-1 (api:1/proto:86-101)</span><br><span class="line">GIT-hash: 3a6a769340ef93b1ba2792c6461250790795db49 build by mockbuild@Build64R6, 2016-01-12 13:27:11</span><br><span class="line">m:res  cs         ro                   ds                         p  mounted  fstype</span><br><span class="line">0:r0   Connected  Secondary/Secondary  Inconsistent/Inconsistent  C   <span class="comment"># inconsisten是两者数据不同步状态。</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># drbdadm -- --overwrite-data-of-peer primary all   #不同步的话，我们在master节点执行这条命令。意思是让备的数据和主的一致。</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># drbd-overview                 # 此时能够看到同步状态了</span></span><br><span class="line"> 0:r0/0  SyncSource Primary/Secondary UpToDate/Inconsistent</span><br><span class="line">    [================&gt;...] sync<span class="string">'ed: 86.3% (1408/10236)M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@nfsmaster ~]# drbd-overview    # 这个时候的状态表示同步成功。</span></span><br><span class="line"><span class="string"> 0:r0/0  Connected Primary/Secondary UpToDate/UpToDate</span></span><br><span class="line"><span class="string">[root@nfsmaster ~]# mkfs.ext4 /dev/drbd0   #格式化磁盘，待会准备使用</span></span><br></pre></td></tr></table></figure></p><h2 id="5、搭建heartbeat"><a href="#5、搭建heartbeat" class="headerlink" title="5、搭建heartbeat"></a>5、搭建heartbeat</h2><h3 id="5-1、安装heartbeat"><a href="#5-1、安装heartbeat" class="headerlink" title="5.1、安装heartbeat"></a>5.1、安装heartbeat</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsmaster ~]<span class="comment">#  rpm -vih http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># yum -y install heartbeat heartbeat-devel heartbeat-stonith heartbeat-pils</span></span><br></pre></td></tr></table></figure><h3 id="5-2、配置heartbeat"><a href="#5-2、配置heartbeat" class="headerlink" title="5.2、配置heartbeat"></a>5.2、配置heartbeat</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsmaster ~]<span class="comment"># cp /usr/share/doc/heartbeat-3.0.4/ha.cf /etc/ha.d/</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment">#  cp /usr/share/doc/heartbeat-3.0.4/haresources /etc/ha.d/</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># cp /usr/share/doc/heartbeat-3.0.4/authkeys /etc/ha.d/</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># chmod 600 /etc/ha.d/authkeys    #必须是600权限</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># grep -v ^# /etc/ha.d/haresources</span></span><br><span class="line">nfsmaster  IPaddr::192.168.1.100/24/eth0 drbddisk::r0 Filesystem::/dev/drbd0::/nfs::ext4   <span class="comment">#drbddisk后面的r0是资源名，drbd配置文件定义的。</span></span><br><span class="line"></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># grep -v ^# /etc/ha.d/ha.cf   #主配置文件</span></span><br><span class="line">logfile /var/<span class="built_in">log</span>/ha-log          <span class="comment">#指定heartbeat日志文件的位置</span></span><br><span class="line">keepalive 1                        <span class="comment"># 心跳发送时间间隔</span></span><br><span class="line">deadtime 5                <span class="comment"># 备用节点5s内没有检测到master机的心跳，确认对方故障</span></span><br><span class="line">warntime 2                 <span class="comment"># 警告2次</span></span><br><span class="line">initdead 10                 <span class="comment"># 守护进程启动30s后，启动服务资源。</span></span><br><span class="line">ucast eth0 192.168.1.8      <span class="comment"># 另一台主机节点eth0的地址，注意是另一台。</span></span><br><span class="line">auto_failback off    <span class="comment"># 当primary节点切换到secondary节点之后，primary节点恢复正常，不进行切回操作，因为切换一次mysql master成本很高。</span></span><br><span class="line">node nfsmaster     <span class="comment"># 定义两个节点的主机名，一行写一个。</span></span><br><span class="line">node nfsbackup</span><br><span class="line">respawn hacluster /usr/lib64/heartbeat/ipfail      <span class="comment">#开启dopd功能</span></span><br><span class="line">respawn hacluster /usr/lib64/heartbeat/dopd</span><br><span class="line">apiauth ipfail gid=haclient uid=hacluster</span><br><span class="line">apiauth dopd gid=haclient uid=hacluster</span><br><span class="line"></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># grep -v ^# /etc/ha.d/authkeys　　　#认证文件</span></span><br><span class="line">auth 1</span><br><span class="line">1 sha1 HA_DB</span><br><span class="line"></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># vim /etc/ha.d/resource.d/drbddisk   </span></span><br><span class="line"> 69                 <span class="variable">$DRBDADM</span> --force primary <span class="variable">$RES</span> &amp;&amp; <span class="built_in">break</span>   <span class="comment"># 更改第69行，添加--force。</span></span><br></pre></td></tr></table></figure><p>配置完成后，把配置文件copy到backup上面即可。不过需要改动的是/etc/ha.d/ha.cf下面的ucast参数，还有/etc/ha.d/haresources下面的nfsmaster，改成nfsbackup，与主机名一致。</p><h3 id="5-3、启动heartbeat"><a href="#5-3、启动heartbeat" class="headerlink" title="5.3、启动heartbeat"></a>5.3、启动heartbeat</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsmaster ~]<span class="comment"># service  heartbeat start</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># ip a|grep 'inet '</span></span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">    inet 192.168.1.7/24 brd 192.168.1.255 scope global eth0</span><br><span class="line">    inet 192.168.1.100/24 brd 192.168.1.255 scope global secondary eth0   <span class="comment"># VIP已经在了，启动成功</span></span><br><span class="line">```    </span><br><span class="line"><span class="comment">### 5.4、设置开机自启动</span></span><br><span class="line">```bash</span><br><span class="line">[root@nfsmaster ~]<span class="comment"># chkconfig heartbeat on</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># chkconfig drbd on</span></span><br><span class="line">测试drbd+heartbeat是否正常工作。</span><br></pre></td></tr></table></figure><ul><li>把master服务器拔掉往下或者直接拔电源，模拟宕机状态，看VIP是否会切换到backup上，如果能够切换，说明成功。drbd状态为primary/unknow</li><li>当master启动后以后，Master不会抢占backup的VIP以及drbd资源。。drbd状态为primary/Secondary<br>下面开始说说NFS结合drbd+heartbeat做高可用吧。<br>NFS主备服务器都安装NFS</li></ul><h2 id="6、NFS"><a href="#6、NFS" class="headerlink" title="6、NFS"></a>6、NFS</h2><h3 id="6-1、安装"><a href="#6-1、安装" class="headerlink" title="6.1、安装"></a>6.1、安装</h3><p>我这里使用的CentOs6.6默认是安装了NFS的，如果你的没有安装，请使用下面的yum命令安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsmaster ~]<span class="comment"># yum -y install  nfs-utils nfs-utils-lib nfs4-acl-tools</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># rpm -qa nfs*</span></span><br><span class="line">nfs-utils-lib-1.1.5-11.el6.x86_64</span><br><span class="line">nfs-utils-1.2.3-70.el6_8.2.x86_64</span><br><span class="line">nfs4-acl-tools-0.3.3-8.el6.x86_64</span><br></pre></td></tr></table></figure></p><h3 id="6-1、启动NFS并配置它"><a href="#6-1、启动NFS并配置它" class="headerlink" title="6.1、启动NFS并配置它"></a>6.1、启动NFS并配置它</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsmaster ~]<span class="comment">#  service rpcbind restart</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># service nfs start</span></span><br><span class="line"></span><br><span class="line">[root@nfsmaster nfs]<span class="comment"># cat /etc/exports </span></span><br><span class="line">/nfs  192.168.1.0/255.255.255.0(rw,sync,no_root_squash)</span><br><span class="line">  <span class="comment"># 共享哪个目录 ，允许哪些client连接，具有什么属性对这个目录。</span></span><br><span class="line"></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># showmount -e 192.168.1.100   # 查看是否有共享目录</span></span><br><span class="line">Export list <span class="keyword">for</span> 192.168.1.7:</span><br><span class="line">/nfs 192.168.1.*</span><br></pre></td></tr></table></figure><p>NFS的exports配置文件需要copy到backup 服务器上。</p><h3 id="6-2、客户端挂载它"><a href="#6-2、客户端挂载它" class="headerlink" title="6.2、客户端挂载它"></a>6.2、客户端挂载它</h3><p>客户端需要安装nfs库，不然会提示下面这样的报错：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsclient ~]<span class="comment"># mount -t nfs 192.168.1.7:/nfs /database/</span></span><br><span class="line">mount: wrong fs <span class="built_in">type</span>, bad option, bad superblock on 192.168.1.7:/nfs,</span><br><span class="line">       missing codepage or helper program, or other error</span><br><span class="line">       (<span class="keyword">for</span> several filesystems (e.g. nfs, cifs) you might</span><br><span class="line">       need a /sbin/mount.&lt;<span class="built_in">type</span>&gt; helper program)</span><br><span class="line">       In some cases useful info is found <span class="keyword">in</span> syslog - try</span><br><span class="line">       dmesg | tail  or so</span><br><span class="line">出现上面的报错后，安装nfs-utils</span><br><span class="line"></span><br><span class="line">[root@nfsclient ~]<span class="comment"># yum -y install nfs-utils</span></span><br><span class="line">安装完之后挂载nfs，使用vip</span><br><span class="line"></span><br><span class="line">[root@nfsclient ~]<span class="comment"># showmount -e 192.168.1.100</span></span><br><span class="line">clnt_create: RPC: Program not registered    <span class="comment">#出现这个错误的话，去nfs服务器上确认是否NFS服务正常启动，重启下即可</span></span><br><span class="line">[root@nfsclient ~]<span class="comment"># showmount -e 192.168.1.100</span></span><br><span class="line">Export list <span class="keyword">for</span> 192.168.1.100:</span><br><span class="line">/nfs 192.168.1.0/255.255.255.0</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># mount -t nfs 192.168.1.100:/nfs /database/</span></span><br><span class="line">[root@localhost ~]<span class="comment"># df -hT</span></span><br><span class="line">Filesystem         Type   Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda2          ext4    28G  2.9G   24G  11% /</span><br><span class="line">tmpfs              tmpfs  491M     0  491M   0% /dev/shm</span><br><span class="line">/dev/sda1          ext4   283M   28M  240M  11% /boot</span><br><span class="line">192.168.1.100:/nfs nfs    9.8G   23M  9.2G   1% /database</span><br><span class="line">  <span class="comment"># 挂载成功。</span></span><br></pre></td></tr></table></figure></p><h3 id="6-3、模拟Nfs-server故障"><a href="#6-3、模拟Nfs-server故障" class="headerlink" title="6.3、模拟Nfs-server故障"></a>6.3、模拟Nfs-server故障</h3><p>我们把NFSmaster关机，此时客户端不管是df ,还是进入到/database下面，都是卡死的。解决办法是在/etc/mtab里面删除最后一行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsclient ~]<span class="comment"># cat /etc/mtab</span></span><br><span class="line">/dev/sda2 / ext4 rw 0 0</span><br><span class="line">proc /proc proc rw 0 0</span><br><span class="line">sysfs /sys sysfs rw 0 0</span><br><span class="line">devpts /dev/pts devpts rw,gid=5,mode=620 0 0</span><br><span class="line">tmpfs /dev/shm tmpfs rw 0 0</span><br><span class="line">/dev/sda1 /boot ext4 rw 0 0</span><br><span class="line">none /proc/sys/fs/binfmt_misc binfmt_misc rw 0 0</span><br><span class="line">vmware-vmblock /var/run/vmblock-fuse fuse.vmware-vmblock rw,nosuid,nodev,default_permissions,allow_other 0 0</span><br><span class="line">nfsd /proc/fs/nfsd nfsd rw 0 0</span><br><span class="line">sunrpc /var/lib/nfs/rpc_pipefs rpc_pipefs rw 0 0</span><br><span class="line">192.168.1.100:/nfs /database nfs rw,addr=192.168.1.100 0 0       <span class="comment">#删除这一行即可。</span></span><br></pre></td></tr></table></figure></p><p>由此可见，这个heartbeat虽然会让VIP进行漂移，但是呢nfs客户端依然是不可用的。所以我们需要采用另外一种方法来来export共享目录。删除export里面的内容，使用命令exporfs申明要共享的目录。我们删除/etc/exports里面的内容，然后通过exportfs来申明要共享的目录。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsmaster ~]<span class="comment"># &gt; /etc/exports</span></span><br><span class="line">[root@nfsmaster ~]<span class="comment"># exportfs -o rw,sync,all_squash,mp,fsid=2 192.168.1.0/24:/nfs/</span></span><br></pre></td></tr></table></figure></p><p>上面这种exportfs的方法同样可以申明共享目录，nfsclient也同样正常使用。</p><h2 id="7、高可用方案"><a href="#7、高可用方案" class="headerlink" title="7、高可用方案"></a>7、高可用方案</h2><p>经过dbrd+heartbeat+NFS的搭建，以及exportfs的简单使用，下面我们就开始做高可用了。<br>说道高可用，不得不说exportfs这个命令，如果我们使用exportfs这个命令来申明需要共享目录的话，那么我们就不需要到/etc/exports里面再次添加这个要申明的目录了。<br>对于NFS高可用，我们需要使用exportfs来关闭共享的目录和打开共享的目录，这样做的好处就需要修改/etc/exports文件了，大大提高了方便性。对此，我们通过exportfs命令写了一个脚本，由heartbeat来接管这个脚本，当nfsmaster服务器宕机时，nfsbackup的heartbeat开始就执行脚本，脚本通过exportfs来共享目录，此时VIP也已经飘过去了，所以nfsclient受影响很小。达到了高可用的目的。更多关于exportfs的资料，可以参考man exportfs。下面就看看这个脚本的内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsbackup ~]<span class="comment"># cat /etc/ha.d/resource.d/rsdata1.sh     #必须放在/etc/ha.d/resource.d下面</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">FSID=<span class="string">"1"</span></span><br><span class="line">EXPORT_DIR=<span class="string">"/nfs"</span>         </span><br><span class="line">EXPORT_OPTIONS=<span class="string">"-o rw,sync,all_squash,mp,fsid=2"</span></span><br><span class="line">EXPORT_CLIENT=<span class="string">"192.168.1.0/24"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">exportfs_usage</span></span>() &#123;</span><br><span class="line">cat &lt;&lt;EOF</span><br><span class="line">    USEAGE: <span class="variable">$0</span> &#123;start|stop&#125;</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">exportfs_start()</span><br><span class="line">&#123;</span><br><span class="line">    fn=<span class="string">"/nfs"</span></span><br><span class="line">    service rpcbind stop &amp;&gt;/dev/null</span><br><span class="line">    service rpcbind start  &amp;&gt;/dev/null</span><br><span class="line">    service nfs restart  &amp;&gt;/dev/null</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"=======nfs restart========"</span></span><br><span class="line">    exportfs <span class="variable">$&#123;EXPORT_OPTIONS&#125;</span> <span class="variable">$&#123;EXPORT_CLIENT&#125;</span>:<span class="variable">$&#123;EXPORT_DIR&#125;</span> 2&gt;1&amp;    <span class="comment">#通过exportfs来申明共享目录</span></span><br><span class="line">    rc=$?</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$rc</span> -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"export resource <span class="variable">$&#123;EXPORT_DIR&#125;</span> error"</span></span><br><span class="line">        <span class="built_in">exit</span> <span class="variable">$rc</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"export resource ok"</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">exportfs_stop()</span><br><span class="line">&#123;</span><br><span class="line">    fn=<span class="string">"/nfs"</span></span><br><span class="line">    service rpcbind stop &amp;&gt;/dev/null</span><br><span class="line">        service rpcbind start  &amp;&gt;/dev/null</span><br><span class="line">    service nfs restart  &amp;&gt;/dev/null</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"=======nfs restart========"</span></span><br><span class="line">    exportfs -u  <span class="variable">$&#123;EXPORT_CLIENT&#125;</span>:<span class="variable">$&#123;EXPORT_DIT&#125;</span> 2&gt;1&amp;   通过exportfs来取消共享目录</span><br><span class="line">    rc=$?</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$rc</span> -ne 0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"export resource <span class="variable">$&#123;EXPORT_DIR&#125;</span> error"</span></span><br><span class="line">        <span class="built_in">exit</span> <span class="variable">$rc</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"umount resource ok"</span></span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ];<span class="keyword">then</span></span><br><span class="line">    exportfs_usage</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">    exportfs_start</span><br><span class="line">    ;;</span><br><span class="line">    stop)</span><br><span class="line">    exportfs_stop</span><br><span class="line">    ;;</span><br><span class="line">    *)</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p><p>这个脚本必须赋予可执行权限，且必须是LSB规范。同时在/etc/ha.d/haresources添加上这个脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsmaster ~]<span class="comment"># cat /etc/ha.d/haresources</span></span><br><span class="line">nfsbackup  IPaddr::192.168.1.100/24/eth0 drbddisk::r0 Filesystem::/dev/drbd0::/nfs::ext4  rsdata1.sh   <span class="comment">#尾部添加rsdata1.sh这个脚本名</span></span><br></pre></td></tr></table></figure></p><p>上面的操作主备都需要操作。脚本主备都要有。</p><h3 id="7-1、测试高可用性"><a href="#7-1、测试高可用性" class="headerlink" title="7.1、测试高可用性"></a>7.1、测试高可用性</h3><p>此时VIP在nfsmaster上面，我们在nfsclient端首先挂载NFS共享目录后创建一些文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsclient /]<span class="comment"># mount -t nfs 192.168.1.100:/nfs /database    #</span></span><br><span class="line">[root@nfsclient /]<span class="comment"># cd /database/</span></span><br><span class="line">[root@nfsclient database]<span class="comment"># touch &#123;1..10&#125;</span></span><br><span class="line">[root@nfsclient database]<span class="comment"># ls</span></span><br><span class="line">1  10  2  3  4  5  6  7  8  9  lost+found  readme</span><br></pre></td></tr></table></figure></p><p>关闭nfsmaster的电源，模拟宕机。此时等待VIP漂移到nfsbackup上面。待漂移到位后，我们继续在nfsclient上操作：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nfsclient database]<span class="comment"># ls    # 可以查看目录下的文件</span></span><br><span class="line">1  10  2  3  4  5  6  7  8  9  lost+found  readme</span><br><span class="line">[root@nfsclient database]<span class="comment"># rm -f &#123;1..5&#125;     # 也可以删除文件。</span></span><br><span class="line">[root@nfsclient database]<span class="comment"># ls</span></span><br><span class="line">10  6  7  8  9  lost+found  readme</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/liaojiafa/p/6129499.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;来源：温柔易淡&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NFS作为业界常用的共享存储方案，被众多公司采用。我司也不列外，使用NFS作为共享存储，为前端WEB server提供服务，主要存储网页代码以及其他文件。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker安装</title>
    <link href="http://blog.aichin.net/m/%E5%AE%89%E8%A3%85docker/"/>
    <id>http://blog.aichin.net/m/安装docker/</id>
    <published>2018-01-11T07:38:17.694Z</published>
    <updated>2018-01-11T07:44:20.039Z</updated>
    
    <content type="html"><![CDATA[<p>主要介绍docker与Rancher的安装</p><a id="more"></a><p>注意事项：</p><blockquote><ul><li>尽量安装最新稳定版本的docker</li></ul></blockquote><p>##一、操作步骤：<br>1、安装apt cert、key、repository<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y apt-transport-https  ca-certificates  curl  software-properties-common</span><br><span class="line">curl -fsSL https://yum.dockerproject.org/gpg | sudo apt-key add –</span><br><span class="line">add-apt-repository <span class="string">"deb https://apt.dockerproject.org/repo/ ubuntu-<span class="variable">$(lsb_release -cs)</span> main"</span></span><br></pre></td></tr></table></figure></p><p>2、查看并安装docker-engine<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-cache madison docker-engine</span><br><span class="line">apt-get -y install docker-engine[=&lt;VERSION_STRING&gt;]</span><br></pre></td></tr></table></figure></p><p>3、启动并设置自启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start  docker.service</span></span><br><span class="line"><span class="comment"># systemctl status  docker.service</span></span><br></pre></td></tr></table></figure></p><p>##二、检查<br>1、以下命令如无warning即为正常<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure></p><p>##三、安装云管理平台<br>注意事项：</p><blockquote><ul><li>目前使用开源版rancher安装，后续安装会从视维服务器进行下载安装</li><li>Rancher安装会从官方拉取镜像，此过程需耗时，具体时间视网速而定</li><li>请按以上操作步骤安装另一台主机，如果测试环境，可以直接用本机既做服务器又做主机</li></ul></blockquote><p>1)接取官方镜像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull rancher/server</span><br></pre></td></tr></table></figure></p><p>2)启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always \</span><br><span class="line">-v /home/rancher_server/db:/var/lib/mysql \</span><br><span class="line">--name rancher-server -p 8080:8080  rancher/server</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要介绍docker与Rancher的安装&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
